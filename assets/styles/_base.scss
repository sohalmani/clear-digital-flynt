/**
* 0.0 Root
*
* Top level styles every element should inherit.
*/

@include font-face('Montserrat', 'montserrat-v14-latin-regular', '400', 'normal');
@include font-face('Montserrat', 'montserrat-v14-latin-italic', '400', 'italic');
@include font-face('Montserrat', 'montserrat-v14-latin-700', '700', 'normal');
@include font-face('Montserrat', 'montserrat-v14-latin-700italic', '700', 'italic');

html {
  background-color: $color-background;
  box-sizing: border-box;
  color: $color-text;
  font-family: 'Poppins', Verdana, sans-serif;
  font-size: 62.5%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  height: 100%;
  line-height: 1.5;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-wrap: break-word;
  word-wrap: break-word;

  @media (min-width: $breakpoint-tablet-horizontal) {
    font-size: 0.625vw;
  }

  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }
}

body {
  font-size: 1.6rem;
  height: 100%;
  letter-spacing: -0.02em;
  margin: 0;
  overflow-x: hidden;
}

/**
* 1.0 Typography
*
* Styling all likely used content flow elements.
*/

#{$heading-selectors} {
  color: $color-headline;
  font-weight: 700;
  line-height: 1.45;
  margin-bottom: 0;
  margin-top: 0;

  a,
  a:hover,
  a:focus {
    color: $color-headline;
    text-decoration: none;
  }
}

h1,
.h1 {
  font-size: 8rem;
  letter-spacing: -0.05em;
  line-height: 1.1;
  margin-bottom: 0;
  padding-top: 0;

  @media (min-width: $breakpoint-tablet) {
    font-size: 12rem;
  }

  @media (min-width: $breakpoint-desktop) {
    font-size: 14rem;
  }
}

h2,
.h2 {
  font-size: 4rem;
  font-weight: 700;
  letter-spacing: -0.02em;
  line-height: 1.1;
  padding-top: 0;

  @media (min-width: $breakpoint-tablet) {
    font-size: 6.5rem;
  }

  @media (min-width: $breakpoint-desktop) {
    font-size: 7.5rem;
  }
}

h3,
.h3 {
  font-size: 4rem;
  letter-spacing: -0.02em;
  line-height: 1.1;
  padding-top: 0;

  @media (min-width: $breakpoint-tablet) {
    font-size: 5rem;
  }

  @media (min-width: $breakpoint-desktop) {
    font-size: 5.5rem;
  }
}

h4,
.h4 {
  font-size: 2.4rem;
  letter-spacing: 0;
  line-height: 1.3;
  padding-top: 0;

  @media (min-width: $breakpoint-tablet) {
    font-size: 3rem;
  }
}

h5,
.h5 {
  font-size: 2rem;
  letter-spacing: 0;
  line-height: 1.3;
  padding-top: 0;

  @media (min-width: $breakpoint-tablet) {
    font-size: 2.5rem;
  }
}

h6,
.h6 {
  font-size: 1.8rem;
  letter-spacing: 0;
  line-height: 1.3;
  padding-top: 0;

  @media (min-width: $breakpoint-tablet) {
    font-size: 2rem;
  }
}

a {
  color: $color-accent;
  transition: color 0.2s ease-out;

  &:hover,
  &:focus {
    color: darken($color-accent, 10%);
  }
}

p,
.paragraph,
table,
figure {
  margin: 2rem 0 0;
}

hr {
  background-color: $color-border;
  border: 0;
  display: block;
  height: 0.1rem;
  margin: 4rem 0;

  @media (min-width: $breakpoint-tablet) {
    margin: 5rem 0;
  }

  @media (min-width: $breakpoint-desktop) {
    margin: 5rem 0;
  }
}

img {
  display: block;
  max-width: 100%;
  width: 100%;
}

figcaption {
  font-size: 1.4rem;
  margin-top: 1rem;
}

code {
  background-color: rgba(0, 0, 0, 0.05);
  display: inline-block;
  padding: 0 0.5rem;
}

blockquote,
.blockquote {
  border-left: 0.4rem solid $color-accent;
  font-size: 3rem;
  font-style: italic;
  font-weight: 700;
  line-height: 1.3;
  margin: 3rem auto;
  padding: 1rem 2rem;

  p {
    font-size: inherit;
    font-style: inherit;
    font-weight: inherit;
    letter-spacing: inherit;
    line-height: inherit;

    &:last-child {
      margin-bottom: 0;
    }
  }
}

/**
* 1.1 Lists & Tables
*
* Default and custom styled list and table elements.
*/

ul,
ol {
  margin: 2rem 0 0;
  padding-left: 2rem;

  ul,
  ol {
    margin-top: 0;
  }
}

/* Icon Lists */

.iconList {
  list-style: none;
  padding: 0;

  li {
    margin-top: 1rem;
    padding-left: 2rem;
    position: relative;

    &::before {
      background-size: contain;
      content: '';
      display: block;
      height: 1rem;
      left: 0;
      position: absolute;
      top: 0.25rem;
      width: 1rem;
    }
  }

  &--checkCircle {
    li::before {
      background-image: url('../assets/icons/check-circle.svg');
    }
  }
}

/* Tables */

table {
  border-collapse: collapse;
  border-spacing: 0;
  max-width: 100%;
}

td,
th {
  padding: 2rem;
  text-align: inherit;
  vertical-align: top;
}

thead {
  th {
    border-bottom: 0.2rem solid $color-accent;
    color: $color-headline;
    padding-bottom: 1rem;
    vertical-align: bottom;
    white-space: nowrap;
  }
}

tr:nth-child(even) {
  background-color: $color-background-light;
}

/**
* 1.2 Buttons
*
* Global button elements, including reset on standard button element.
*/

button {
  appearance: none;
  background-color: transparent;
  border: 0;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  padding: 0;
  text-align: inherit;
}

.button {
  appearance: none;
  background-color: $color-accent;
  border: 0.2rem solid $color-accent;
  color: $color-background;
  cursor: pointer;
  display: inline-block;
  font-family: inherit;
  font-size: 1.6rem;
  font-weight: 700;
  letter-spacing: 0;
  line-height: 1;
  margin: 3rem 0 0;
  padding: 1.5rem 2rem;
  text-align: center;
  text-decoration: none;
  transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;
  user-select: none;

  &:disabled,
  &--disabled {
    border-color: $color-contrast;
    color: $color-contrast;
    cursor: default;
    opacity: 0.7;
    pointer-events: none;
  }

  &:hover,
  &:focus {
    background-color: transparent;
    border-color: $color-accent;
    color: $color-accent;
  }

  &--outline,
  &--ghost {
    background-color: transparent;
    border-color: $color-background-dark;
    color: $color-background-dark;

    &:hover,
    &:focus {
      background-color: $color-background-dark;
      border-color: $color-background-dark;
      color: $color-background;
    }
  }

  &--small {
    font-size: 1.6rem;
  }

  &--link {
    align-items: center;
    background-color: transparent;
    border: 0;
    color: $color-background-dark;
    display: inline-flex;
    padding: 0;
    position: relative;
    text-transform: none;
    transition: color 0.2s ease-out;

    &:hover,
    &:focus {
      background-color: transparent;
      color: $color-background-dark;

      &::after {
        background-position: right center;
      }
    }

    &::after {
      $color-background-dark-rgb: red($color-background-dark), green($color-background-dark), blue($color-background-dark);

      background-image: url('data:image/svg+xml,<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4.16663 10H15.8333" stroke="rgb(#{$color-background-dark-rgb})" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><path d="M10 4.16675L15.8333 10.0001L10 15.8334" stroke="rgb(#{$color-background-dark-rgb})" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>');
      background-position: left center;
      background-repeat: no-repeat;
      background-size: contain;
      content: '';
      display: inline-block;
      height: 2rem;
      margin-left: 0.5rem;
      transition: background-position 0.2s ease-out;
      width: 2.2rem;
    }
  }
}

/* Pills */

.pill {
  background-color: $color-background-dark;
  border-radius: 1rem;
  color: $color-background;
  display: inline-block;
  font-size: 1.2rem;
  max-width: 100%;
  overflow: hidden;
  padding: 0.5rem 2rem;
  text-decoration: none;
  text-overflow: ellipsis;
  vertical-align: middle;
  white-space: nowrap;

  &:hover,
  &:focus {
    color: $color-background;
  }
}

/* Icons */

.feather {
  color: $color-accent;
  position: relative;
  top: -0.2rem;
  vertical-align: middle;
}

/**
* 1.3 Forms
*
* Global form elements, including structering wrapper elements.
*/

form {
  margin: 0;
}

fieldset {
  border: 0;
  margin: 2rem 0 0;
  padding: 0;

  *:last-child {
    margin-top: 0;
  }

  input,
  select,
  textarea {
    margin: 3rem 0 0;
  }
}

legend {
  display: inline-block;
  font-size: 1.25rem;
  font-weight: 700;
  margin-bottom: 2rem;
}

label {
  display: inline-block;
  font-weight: 700;
  line-height: 1.5;
  margin-top: 1rem;
}

#{$input-selectors} {
  appearance: none;
  background-color: $color-background;
  border: 0.1rem solid rgba(11, 16, 12, 1);
  border-radius: 0;
  color: $color-headline;
  font-family: inherit;
  font-size: inherit;
  min-height: 5rem;
}

input,
select,
textarea {
  margin: 2rem 0 0;
  padding: 1rem 2rem;
}

textarea {
  min-height: 15rem;
  padding: 2rem;
  resize: vertical;
  width: 100%;
}

select {
  $color-text-rgb: red($color-contrast), green($color-contrast),
    blue($color-contrast);

  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg width='32' height='32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpolyline fill='none' stroke='rgb(#{$color-text-rgb})' stroke-width='5'  points='2,9 16,25 30,9 '/%3E%3C/svg%3E");
  background-position: calc(100% - 1.8rem) center;
  background-repeat: no-repeat;
  background-size: 0.9rem;
  line-height: 1.75;
  padding-right: 4.5rem;

  &::-ms-expand {
    display: none;
  }
}

[type='checkbox'],
[type='radio'] {
  opacity: 0;
  pointer-events: none;
  position: absolute;
  width: 0.1rem;

  &,
  &:hover,
  &:focus {
    border-color: $color-border;
    outline: 0;
  }

  + label {
    display: inline-block;
    padding-left: 3rem;
    position: relative;
    width: 100%;

    &::before {
      background-color: #fff;
      border: 0.1rem solid $color-border;
      border-radius: 0.2rem;
      content: '';
      display: block;
      height: 1.5rem;
      left: 0;
      margin: 0;
      padding: 0;
      position: absolute;
      top: 0.4rem;
      transition: border-color 0.2s ease, background-color 0.2s ease;
      width: 1.5rem;
    }
  }

  &:checked {
    + label::before {
      background-color: $color-accent;
      border-color: $color-accent;
      box-shadow: inset 0 0 0 0.2rem $color-background;
    }
  }
}

[type='radio'] {
  + label::before {
    border-radius: 50%;
  }
}

/**
* 2.0 Helpers
*
* Global layout classes for a consistent appearance.
*/

.pageWrapper {
  display: flex;
  flex-direction: column;
  height: 100%;

  .admin-bar & {
    padding-top: 4.6rem;

    @media (min-width: 782px) {
      padding-top: 3.2rem;
    }
  }
}

.mainContent {
  flex: 1 0 auto;
}

.flyntComponent {
  min-height: 100vh;
  position: relative;
}

.componentSpacing {
  padding: $component-spacing-mobile 0;

  @media (min-width: $breakpoint-tablet) {
    padding: $component-spacing-tablet 0;
  }

  @media (min-width: $breakpoint-desktop) {
    padding: $component-spacing-desktop 0;
  }
}

.container,
.centerMaxWidthContainer {
  @include center;
  position: relative;
  z-index: 5;

  @media (min-width: $breakpoint-tablet) {
    @include center($padding: $container-padding-tablet);
  }

  @media (min-width: $breakpoint-desktop) {
    @include center($max-width: $container-max-width-desktop, $padding: $container-padding-desktop);
  }
}

.centerContentMaxWidth {
  margin: 0 auto;
  max-width: $content-max-width;
}

.preContent {
  @include reset-content-margins;
  margin: 0 auto 3.2rem;
  max-width: $content-max-width;
  text-align: center;

  @media (min-width: $breakpoint-tablet) {
    margin-bottom: $container-padding-tablet;
  }

  @media (min-width: $breakpoint-desktop) {
    margin-bottom: $container-padding-desktop;
  }
}

.postContent {
  @include reset-content-margins;
  margin: 3.2rem auto 0;
  max-width: $content-max-width;
  text-align: center;

  @media (min-width: $breakpoint-tablet) {
    margin-top: $container-padding-tablet;
  }

  @media (min-width: $breakpoint-desktop) {
    margin-top: $container-padding-desktop;
  }
}

.scrollableTableWrapper {
  -webkit-overflow-scrolling: touch;
  overflow-x: auto;
}

/* Class for text that should only be visible to screen readers */

.visuallyHidden {
  clip: rect(0.1rem, 0.1rem, 0.1rem, 0.1rem);
  height: 0.1rem !important;
  overflow: hidden;
  position: absolute !important;
  white-space: nowrap;
  width: 0.1rem !important;
}

/* Box Helpers */

.boxPadding {
  @include reset-content-margins;
  padding: 4rem;

  @media (min-width: $breakpoint-tablet) {
    padding: 5rem;
  }
}

.boxShadow {
  box-shadow: 0 0.1rem 2.6rem 0 rgba(0, 0, 0, 0.06);
}

/* Custom styling for single post layouts */

.post {
  &-main {
    .componentSpacing {
      margin: $component-spacing-mobile/2 0;

      @media (min-width: $breakpoint-tablet) {
        margin: $component-spacing-tablet/2 0;
      }

      @media (min-width: $breakpoint-desktop) {
        margin: $component-spacing-desktop/2 0;
      }

      &[class*='theme'] {
        margin: 0;
        padding: $component-spacing-mobile/2 0;

        @media (min-width: $breakpoint-tablet) {
          padding: $component-spacing-tablet/2 0;
        }

        @media (min-width: $breakpoint-desktop) {
          padding: $component-spacing-desktop/2 0;
        }
      }
    }

    > .componentSpacing {
      &:first-child {
        margin-top: 0;
      }

      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}

/* Skip link behaviour */

.skipLink {
  position: fixed;
  top: -10rem;
  z-index: 999;

  &:focus {
    top: 0;
  }
}

/**
* 2.1 Asset Helpers
*
* Global asset classes for a consistent appearance.
*/

/* Overlays */

.overlay-grid {
  &::before {
    background-image: url('data:image/svg+xml,<svg version="1.1" id="Layer_4" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 140 140" style="enable-background:new 0 0 140 140;" xml:space="preserve"><g><g><g><path d="M73.4,70c0,1.9-1.5,3.4-3.4,3.4c-1.9,0-3.4-1.5-3.4-3.4c0-1.9,1.5-3.4,3.4-3.4C71.9,66.6,73.4,68.1,73.4,70z"/></g></g><path d="M84,68.3c0.9,0,1.7,0.8,1.7,1.7s-0.8,1.7-1.7,1.7c-0.9,0-1.7-0.8-1.7-1.7S83.1,68.3,84,68.3z"/><path d="M98,68.3c0.9,0,1.7,0.8,1.7,1.7s-0.8,1.7-1.7,1.7c-0.9,0-1.7-0.8-1.7-1.7S97.1,68.3,98,68.3z"/><path d="M112,68.3c0.9,0,1.7,0.8,1.7,1.7s-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7S111.1,68.3,112,68.3z"/><circle cx="126" cy="70" r="1.7"/><path d="M140,68.3c0,1.9,0,1.5,0,3.4c-0.9,0-1.7-0.8-1.7-1.7S139.1,68.3,140,68.3z"/><path d="M71.7,0c0,0.9-0.8,1.7-1.7,1.7S68.3,0.9,68.3,0C69.7,0,69.6,0,71.7,0z"/><path d="M71.7,14c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7c0-0.9,0.8-1.7,1.7-1.7S71.7,13.1,71.7,14z"/><path d="M71.7,28c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7s0.8-1.7,1.7-1.7S71.7,27.1,71.7,28z"/><path d="M71.7,42c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7c0-0.9,0.8-1.7,1.7-1.7S71.7,41.1,71.7,42z"/><path d="M71.7,56c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7s0.8-1.7,1.7-1.7S71.7,55.1,71.7,56z"/><path d="M0,68.3c0.9,0,1.7,0.8,1.7,1.7S0.9,71.7,0,71.7C0,70.6,0,70,0,68.3z"/><circle cx="14" cy="70" r="1.7"/><path d="M28,68.3c0.9,0,1.7,0.8,1.7,1.7s-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7S27.1,68.3,28,68.3z"/><circle cx="42" cy="70" r="1.7"/><path d="M56,68.3c0.9,0,1.7,0.8,1.7,1.7s-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7S55.1,68.3,56,68.3z"/><path d="M71.7,84c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7s0.8-1.7,1.7-1.7S71.7,83.1,71.7,84z"/><path d="M71.7,98c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7s0.8-1.7,1.7-1.7S71.7,97.1,71.7,98z"/><path d="M71.7,112c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7s0.8-1.7,1.7-1.7S71.7,111.1,71.7,112z"/><path d="M71.7,126c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7s0.8-1.7,1.7-1.7S71.7,125.1,71.7,126z"/><path d="M71.7,140c-1.7,0-1.7,0-3.4,0c0-0.9,0.8-1.7,1.7-1.7S71.7,139.1,71.7,140z"/></g></svg>');
    background-position: center;
    background-repeat: repeat;
    background-size: 6rem;
    content: '';
    font-size: 0;
    height: 100%;
    left: 0;
    opacity: 0.5;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 3;
  }
}

/* Markers */

.marker {
  color: $color-brand;
  display: inline-block;
  position: relative;

  &::after {
    clip-path: polygon(0% 0%, 0% 100%, 0% 100%, 0% 0%);
    content: '';
    left: 0;
    pointer-events: none;
    position: absolute;
    transition: clip-path 600ms ease-in-out;
    user-select: none;
    width: 100%;
  }

  &:hover,
  &.draw {
    &::after {
      clip-path: polygon(0% 0%, 0% 100%, 100% 100%, 100% 0%);
    }
  }

  &--crossout {
    &::after {
      background-image: url('../assets/icons/marker-crossout.svg');
      background-repeat: no-repeat;
      background-size: 100% 100%;
      bottom: 0;
      height: 100%;
    }
  }

  &--underline {
    &::after {
      background-image: url('../assets/icons/marker-underline-black-1.svg');
      background-repeat: no-repeat;
      background-size: 100% 100%;
      bottom: -0.3em;
      height: 0.5em;
    }
  }
}

/* Artwork */

.art {
  display: inline-block;
  position: relative;

  &::before {
    background-repeat: no-repeat;
    content: '';
    pointer-events: none;
    position: absolute;
  }

  &--circleWhite {
    &::before {
      background-image: url('../assets/icons/art-circle.svg');
      background-size: 100% 100%;
      height: 5.6rem;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      width: 8.4rem;

      @media (min-width: $breakpoint-tablet) {
        height: 10.5rem;
        width: 17.7rem;
      }
    }
  }

  &--text {
    &::before {
      background-image: url('../assets/icons/art-text.svg');
      background-size: cover;
      height: 4rem;
      right: -55%;
      top: -120%;
      width: 14rem;

      @media (min-width: $breakpoint-tablet) {
        height: 5.8rem;
        right: -25%;
        top: -100%;
        width: 19.5rem;
      }
    }
  }

  &--rocket {
    &::before {
      background-image: url('../assets/icons/art-rocket.svg');
      background-size: cover;
    }
  }

  &--arrow {
    &::before {
      background-image: url('../assets/icons/art-arrow.svg');
      background-size: cover;
    }
  }

  &--quote {
    &::before {
      background-image: url('../assets/icons/art-quote.svg');
      background-size: cover;
    }
  }

  &--star {
    &::before {
      background-image: url('../assets/icons/art-star.svg');
      background-size: cover;
    }
  }
}

/**
* 2.2 Plugin Overrides
*
* Global styling for third-party plugins for a consistent appearance.
*/

/* Swiper styling overrides */

.swiper {
  --swiper-theme-color: #{$color-brand};
  position: relative;
}

.swiper-wrapper {
  height: auto !important;
}

.swiper-pagination-progressbar {
  background: transparent !important;
  height: 0.8rem !important;
  margin-top: 4rem;
  position: relative !important;

  @media (min-width: $breakpoint-tablet) {
    margin-top: 5rem;
  }

  &::before {
    background-color: $color-background-dark;
    content: '';
    display: block;
    height: 0.1rem;
    position: relative;
    top: 50%;
    transform: translateY(-50%);
    width: 100%;
  }
}

.swiper-button-prev,
.swiper-button-next {
  height: 100% !important;
  margin-top: 0 !important;
  top: 0 !important;
  width: 100% !important;

  &::after {
    display: none !important;
  }

  &.swiper-button-disabled {
    opacity: 1 !important;
  }
}

.swiper-button-prev,
.swiper-container-rtl .swiper-button-next {
  left: -100% !important;
}

.swiper-button-next,
.swiper-container-rtl .swiper-button-prev {
  right: -100% !important;
}

/**
* 3.0 Themes
*
* Color themes for backgrounds and content elements.
*/

.themeLight {
  background-color: $color-background-light;
}

.themeDark {
  background-color: $color-background-dark;

  &,
  #{$heading-selectors} {
    color: $color-background;
  }

  .button {
    color: $color-background;

    &:hover,
    &:focus {
      background-color: transparent;
      border-color: $color-accent;
      color: $color-accent;
    }

    &--outline,
    &--ghost {
      background-color: transparent;
      border-color: $color-background;
      color: $color-background;

      &:hover,
      &:focus {
        background-color: $color-background;
        border-color: $color-background;
        color: $color-background-dark;
      }
    }

    &--link {
      &:hover,
      &:focus {
        background-color: transparent;
        color: $color-background;
      }

      &::after {
        $color-background-rgb: red($color-background), green($color-background), blue($color-background);

        background-image: url('data:image/svg+xml,<svg width="20" height="21" viewBox="0 0 20 21" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4.16675 10.5H15.8334" stroke="rgb(#{$color-background-rgb})" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><path d="M10 4.66675L15.8333 10.5001L10 16.3334" stroke="rgb(#{$color-background-rgb})" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>');
      }
    }
  }

  .pill {
    background-color: $color-background;
    color: $color-background-dark;
  }

  &.overlay-grid,
  .overlay-grid {
    &::before {
      background-image: url('data:image/svg+xml,<svg version="1.1" id="Layer_4" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 140 140" style="enable-background:new 0 0 140 140;" xml:space="preserve"><style type="text/css">.st0{fill:%23FFFFFF;}</style><g><g><g><path class="st0" d="M73.4,70c0,1.9-1.5,3.4-3.4,3.4c-1.9,0-3.4-1.5-3.4-3.4c0-1.9,1.5-3.4,3.4-3.4C71.9,66.6,73.4,68.1,73.4,70z"/></g></g><path class="st0" d="M84,68.3c0.9,0,1.7,0.8,1.7,1.7s-0.8,1.7-1.7,1.7c-0.9,0-1.7-0.8-1.7-1.7S83.1,68.3,84,68.3z"/><path class="st0" d="M98,68.3c0.9,0,1.7,0.8,1.7,1.7s-0.8,1.7-1.7,1.7c-0.9,0-1.7-0.8-1.7-1.7S97.1,68.3,98,68.3z"/><path class="st0" d="M112,68.3c0.9,0,1.7,0.8,1.7,1.7s-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7S111.1,68.3,112,68.3z"/><circle class="st0" cx="126" cy="70" r="1.7"/><path class="st0" d="M140,68.3c0,1.9,0,1.5,0,3.4c-0.9,0-1.7-0.8-1.7-1.7S139.1,68.3,140,68.3z"/><path class="st0" d="M71.7,0c0,0.9-0.8,1.7-1.7,1.7S68.3,0.9,68.3,0C69.7,0,69.6,0,71.7,0z"/><path class="st0" d="M71.7,14c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7c0-0.9,0.8-1.7,1.7-1.7S71.7,13.1,71.7,14z"/><path class="st0" d="M71.7,28c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7s0.8-1.7,1.7-1.7S71.7,27.1,71.7,28z"/><path class="st0" d="M71.7,42c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7c0-0.9,0.8-1.7,1.7-1.7S71.7,41.1,71.7,42z"/><path class="st0" d="M71.7,56c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7s0.8-1.7,1.7-1.7S71.7,55.1,71.7,56z"/><path class="st0" d="M0,68.3c0.9,0,1.7,0.8,1.7,1.7S0.9,71.7,0,71.7C0,70.6,0,70,0,68.3z"/><circle class="st0" cx="14" cy="70" r="1.7"/><path class="st0" d="M28,68.3c0.9,0,1.7,0.8,1.7,1.7s-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7S27.1,68.3,28,68.3z"/><circle class="st0" cx="42" cy="70" r="1.7"/><path class="st0" d="M56,68.3c0.9,0,1.7,0.8,1.7,1.7s-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7S55.1,68.3,56,68.3z"/><path class="st0" d="M71.7,84c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7s0.8-1.7,1.7-1.7S71.7,83.1,71.7,84z"/><path class="st0" d="M71.7,98c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7s0.8-1.7,1.7-1.7S71.7,97.1,71.7,98z"/><path class="st0" d="M71.7,112c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7s0.8-1.7,1.7-1.7S71.7,111.1,71.7,112z"/><path class="st0" d="M71.7,126c0,0.9-0.8,1.7-1.7,1.7s-1.7-0.8-1.7-1.7s0.8-1.7,1.7-1.7S71.7,125.1,71.7,126z"/><path class="st0" d="M71.7,140c-1.7,0-1.7,0-3.4,0c0-0.9,0.8-1.7,1.7-1.7S71.7,139.1,71.7,140z"/></g></svg>');
    }
  }

  .marker {
    &--underline {
      &::after {
        background-image: url('../assets/icons/marker-underline-white-1.svg');
      }
    }
  }

  .swiper-pagination-progressbar {
    &::before {
      background-color: $color-background;
    }
  }
}

.themeHero {
  background-color: $color-background-hero;

  &,
  #{$heading-selectors},
  a,
  .feather {
    color: $color-background;
  }

  a:hover,
  a:focus {
    color: $color-background-dark;
  }

  .button {
    background-color: $color-background-dark;
    border-color: $color-background-dark;
    color: $color-background;

    &:hover,
    &:focus {
      background-color: transparent;
      border-color: $color-background-dark;
      color: $color-background-dark;
    }

    &--outline,
    &--ghost {
      background-color: transparent;
      border-color: $color-background;
      color: $color-background;

      &:hover,
      &:focus {
        background-color: $color-background;
        border-color: $color-background;
        color: $color-background-dark;
      }
    }

    &--link {
      background-color: transparent;
      color: $color-background;

      &:hover,
      &:focus {
        background-color: transparent;
        color: $color-background;
      }

      &::after {
        $color-background-dark-rgb: red($color-background-dark), green($color-background-dark), blue($color-background-dark);

        background-image: url('data:image/svg+xml,<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4.16663 10H15.8333" stroke="rgb(#{$color-background-dark-rgb})" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><path d="M10 4.16675L15.8333 10.0001L10 15.8334" stroke="rgb(#{$color-background-dark-rgb})" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>');
      }
    }
  }

  .pill {
    background-color: $color-background;
    color: $color-background-dark;
  }
}

.themeReset {
  background-color: $color-background;
  color: $color-text;

  #{$heading-selectors} {
    color: $color-headline;

    a,
    a:hover,
    a:focus {
      color: $color-headline;
      text-decoration: none;
    }
  }

  a,
  .feather {
    color: $color-accent;
  }

  a:hover,
  a:focus {
    color: darken($color-accent, 10%);
  }

  .button {
    background-color: $color-accent;
    border-color: $color-accent;
    color: $color-background;

    &:hover,
    &:focus {
      background-color: transparent;
      border-color: $color-accent;
      color: $color-accent;
    }

    &--outline,
    &--ghost {
      background-color: transparent;
      border-color: $color-background-dark;
      color: $color-background-dark;

      &:hover,
      &:focus {
        background-color: $color-background-dark;
        border-color: $color-background-dark;
        color: $color-background;
      }
    }

    &--link {
      background-color: transparent;
      color: $color-background-dark;

      &:hover,
      &:focus {
        background-color: transparent;
        color: $color-background-dark;

        &::after {
          background-position: left center;
        }
      }

      &::after {
        $color-background-dark-rgb: red($color-background-dark), green($color-background-dark), blue($color-background-dark);

        background-image: url('data:image/svg+xml,<svg width="20" height="21" viewBox="0 0 20 21" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4.16675 10.5H15.8334" stroke="rgb(#{$color-background-dark-rgb})" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><path d="M10 4.66675L15.8333 10.5001L10 16.3334" stroke="rgb(#{$color-background-dark-rgb})" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>');
      }
    }
  }

  .pill {
    background-color: $color-background-dark;
    color: $color-background;
  }
}
